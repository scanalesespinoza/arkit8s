name: Validate YAML and Python

on:
  pull_request:
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.py'
      - 'utilities/validate-yaml.sh'
      - '.github/workflows/validate.yml'

jobs:
  yaml-validation:
    name: YAML syntax validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run YAML validation
        run: |
          chmod +x utilities/validate-yaml.sh
          ./utilities/validate-yaml.sh

  yaml-lint:
    name: YAML linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install yamllint
        run: |
          python3 -m pip install --user yamllint
      - name: Run yamllint
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          yamllint -d "{extends: default, rules: {line-length: disable}}" .

  python-compilation:
    name: Python compilation check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Compile Python files
        run: python -m compileall .

  automerge:
    needs:
      - yaml-validation
      - yaml-lint
      - python-compilation
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash
          pull-request-number: ${{ github.event.pull_request.number }}
      - name: Delete PR branch on merge
        uses: actions/github-script@v6
        with:
          script: |
            await github.graphql(`
              mutation($input: UpdatePullRequestInput!) {
                updatePullRequest(input: $input) {
                  pullRequest {
                    number
                    deleteHeadRefOnMerge
                  }
                }
              }
            `, {
              input: {
                pullRequestId: '${{ github.event.pull_request.node_id }}',
                deleteHeadRefOnMerge: true
              }
            });
