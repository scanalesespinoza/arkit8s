---
apiVersion: v1
kind: ConfigMap
metadata:
  name: architects-visualization-ui
  namespace: support-domain
  labels:
    app.kubernetes.io/name: architects-visualization
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: arkit8s
  annotations:
    architecture.domain: support
    architecture.function: architecture-visualization
    architecture.part_of: arkit8s
    architecture.calls: architects-console-commands
    architecture.invoked_by: sentik
data:
  application.properties: |
    quarkus.http.port=8080
    quarkus.http.cors=true
    quarkus.default-locale=es
    quarkus.native.additional-build-args=-H:IncludeResources=templates/.*
    quarkus.qute.suffixes=html
    arkit8s.console.commands-path=/opt/arkit8s/commands/commands.json
    arkit8s.console.refresh-interval=PT5S
  templates/dashboard.qute.html: |
    <!DOCTYPE html>
    <html lang="es">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Arkit8s Control Plane</title>
        <style>
          :root {
            color-scheme: dark light;
            font-family: "Red Hat Text", "Segoe UI", sans-serif;
            background: radial-gradient(circle at top left, #0f172a 0%, #020617 100%);
            color: #e2e8f0;
          }
          body {
            margin: 0;
            padding: 0;
          }
          header {
            padding: 1.5rem 2rem;
            background: rgba(30, 64, 175, 0.85);
            backdrop-filter: blur(8px);
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
          }
          header h1 {
            margin: 0;
            font-size: 2.4rem;
          }
          header p {
            margin: 0;
            max-width: 720px;
            line-height: 1.5;
          }
          main {
            display: grid;
            grid-template-columns: minmax(300px, 1fr) minmax(320px, 1fr);
            gap: 1.5rem;
            padding: 2rem;
          }
          section {
            background: rgba(15, 23, 42, 0.75);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 20px 45px rgba(15, 23, 42, 0.45);
            border: 1px solid rgba(148, 163, 184, 0.2);
            display: flex;
            flex-direction: column;
            gap: 1rem;
          }
          section h2 {
            margin: 0;
            font-size: 1.6rem;
          }
          ul.command-list {
            list-style: none;
            margin: 0;
            padding: 0;
            display: grid;
            gap: 0.75rem;
          }
          li.command-card {
            border-radius: 12px;
            padding: 1rem;
            border: 1px solid rgba(94, 234, 212, 0.35);
            background: rgba(15, 118, 110, 0.2);
          }
          li.command-card strong {
            display: block;
            font-size: 1.1rem;
            margin-bottom: 0.3rem;
          }
          li.command-card code {
            display: inline-block;
            margin-top: 0.4rem;
            padding: 0.4rem 0.6rem;
            border-radius: 8px;
            background: rgba(15, 23, 42, 0.8);
            color: #67e8f9;
            font-size: 0.85rem;
          }
          .terminal {
            flex: 1;
            border-radius: 12px;
            background: #000000;
            color: #67e8f9;
            font-family: "Fira Code", monospace;
            padding: 1rem;
            overflow: auto;
            min-height: 280px;
            box-shadow: inset 0 0 0 1px rgba(94, 234, 212, 0.2);
          }
          button.primary {
            align-self: flex-start;
            padding: 0.75rem 1.5rem;
            border-radius: 999px;
            border: none;
            background: linear-gradient(135deg, #38bdf8, #a855f7);
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
          }
          button.primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 20px 40px rgba(56, 189, 248, 0.25);
          }
        </style>
      </head>
      <body>
        <header>
          <h1>Arkit8s Architects Visualization</h1>
          <p>
            Una experiencia inspirada en Kubeland para observar el estado del plano de control
            de Arkit8s. Los comandos del CLI están disponibles en la consola web para mantener
            la sincronía entre operaciones declarativas y acciones de plataforma.
          </p>
        </header>
        <main>
          <section>
            <h2>Comandos integrados</h2>
            <ul class="command-list">
              {#if commands?.isEmpty}
                <li class="command-card">No hay comandos registrados. Ejecuta sync-web-console.</li>
              {#else}
                {#for command in commands}
                  <li class="command-card">
                    <strong>{command.name}</strong>
                    <span>{command.summary}</span>
                    <code>{command.usage}</code>
                  </li>
                {/for}
              {/if}
            </ul>
            <button class="primary" hx-post="/api/execute" hx-target="#terminal-log" hx-include="[name=command]">
              Ejecutar comando seleccionado
            </button>
          </section>
          <section>
            <h2>Consola web del CLI</h2>
            <div class="terminal" id="terminal-log">
              {terminalOutput ?: 'Selecciona un comando para iniciar la sesión web del CLI.'}
            </div>
          </section>
        </main>
        <script>
          async function refreshCommands() {
            const response = await fetch('/api/commands');
            if (!response.ok) {
              console.error('No fue posible sincronizar los comandos del CLI.');
              return;
            }
            const payload = await response.json();
            window.dispatchEvent(new CustomEvent('arkit8s:commands', { detail: payload }));
          }
          window.addEventListener('load', refreshCommands);
        </script>
      </body>
    </html>
